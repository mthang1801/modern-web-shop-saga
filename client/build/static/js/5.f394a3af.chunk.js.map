{"version":3,"sources":["components/collections-preview/collections-preview.styles.jsx","components/collections-preview/collections-preview.component.js","components/collections-overview/collections-overview.styles.jsx","components/collections-overview/collections-overview.component.js","components/collections-overview/collections-overview.container.jsx","hoc/with-spinner/with-spinner.styles.jsx","hoc/with-spinner/with-spinner.hoc.jsx","redux/shop/shop.selectors.js","components/collection-item/collection-item.styles.jsx","components/collection-item/collection-item.component.js"],"names":["CollectionPreviewContainer","styled","div","Title","h2","Items","withRouter","title","routeName","id","items","history","match","onClick","push","path","filter","_","idx","map","item","key","CollectionOverviewContainer","mapStateToProps","createStructuredSelector","collections","selectCollectionsOverview","connect","console","log","isLoading","selectCollectionsIsLoading","CollectionsOverviewContainer","WithSpinner","CollectionsOverview","SpinnerOverlay","SpinnerContainer","WrappedComponent","otherProps","selectShop","state","shop","selectShopCollections","createSelector","loading","selectCollection","collectionUrlParam","Object","keys","objKey","isCollectionPageLoaded","entries","length","AddButton","CustomButton","CollectionItemContainer","BackgroundImageContainer","imageUrl","name","CollectionItemContent","CollectionItemName","span","CollectionItemPrice","dispatch","addItem","price"],"mappings":"q4BAEO,IAAMA,EAA6BC,IAAOC,IAAV,KAM1BC,EAAQF,IAAOG,GAAV,KAULC,EAAQJ,IAAOC,IAAV,K,OCcHI,eAxBY,SAAC,GAOrB,IANLC,EAMI,EANJA,MAEAC,GAII,EALJC,GAKI,EAJJD,WACAE,EAGI,EAHJA,MACAC,EAEI,EAFJA,QACAC,EACI,EADJA,MAEA,OACE,kBAACZ,EAAD,KACE,kBAACG,EAAD,CAAOU,QAAS,kBAAMF,EAAQG,KAAR,UAAgBF,EAAMG,KAAtB,YAA8BP,MACjDD,GAEH,kBAACF,EAAD,KACGK,EACEM,QAAO,SAACC,EAAGC,GAAJ,OAAYA,EAAM,KACzBC,KAAI,SAACC,GAAD,OACH,kBAAC,IAAD,CAAgBC,IAAKD,EAAKX,GAAIW,KAAMA,Y,2GCvBzC,IAAME,EAA8BrB,IAAOC,IAAV,K,eCelCqB,EAAkBC,YAAyB,CAC/CC,YAAaC,MAEAC,cAAQJ,EAARI,EAda,SAAC,GAAqB,IAAnBF,EAAkB,EAAlBA,YAE7B,OADAG,QAAQC,IAAIJ,GAEV,kBAACH,EAAD,KACGG,EAAYN,KAAI,SAACC,GAAD,OACf,kBAAC,EAAD,eAAoBC,IAAKD,EAAKX,IAAQW,W,QCNxCG,EAAkBC,YAAyB,CAC/CM,UAAYC,MAGRC,EAA+BL,YAAQJ,EAARI,CAAyBM,YAAYC,IAE3DF,a,gvBCVR,IAAMG,EAAiBlC,IAAOC,IAAV,KAQdkC,EAAmBnC,IAAOC,IAAV,KCFd+B,IALK,SAACI,GACnB,OAAO,YAAiC,IAA/BP,EAA8B,EAA9BA,UAAcQ,EAAgB,6BACrC,OAAOR,EAAa,kBAACK,EAAD,KAAgB,kBAACC,EAAD,OAAwC,kBAACC,EAAqBC,M,gCCJtG,mJAEaC,EAAa,SAACC,GAAD,OAAWA,EAAMC,MAE9BC,EAAwBC,YACnCJ,GACA,SAACE,GAAD,OAAUA,EAAKhB,eAGJM,EAA6BY,YACxCJ,GACA,SAACE,GAAD,OAAUA,EAAKG,WAGJC,EAAmB,SAACC,GAAD,OAC9BH,YACED,GACA,SAACjB,GAAD,OAAiBA,EAAYqB,OAGpBpB,EAA4BiB,YACvCD,GACA,SAACjB,GAAD,OAAiBsB,OAAOC,KAAKvB,GAAaN,KAAI,SAAC8B,GAAD,OAAYxB,EAAYwB,SAG3DC,EAAyBP,YACpCD,GACA,SAACjB,GAAD,QACEA,GAAcsB,OAAOI,QAAQ1B,GAAa2B,OAAS,M,glDCzBhD,IAAMC,EAAYpD,YAAOqD,IAAPrD,CAAH,KAeTsD,EAA0BtD,IAAOC,IAAV,IAWhCmD,EAIEA,GAcOG,EAA2BvD,IAAOC,IAAV,KAGd,gBAAEuD,EAAF,EAAEA,SAAF,oBAAuBA,EAAvB,QAIvBD,EAAyBE,KAAOF,EAEzB,IAAMG,EAAwB1D,IAAOC,IAAV,KAMrB0D,EAAqB3D,IAAO4D,KAAV,KAOlBC,EAAsB7D,IAAO4D,KAAV,K,gBCvCjBlC,gBAAQ,MAJI,SAACoC,GAAD,MAAe,CACxCC,QAAS,SAAC5C,GAAD,OAAU2C,EAASC,YAAQ5C,QAGvBO,EAnBQ,SAAC,GAAuB,IAArBqC,EAAoB,EAApBA,QAAS5C,EAAW,EAAXA,KACzBsC,EAA0BtC,EAA1BsC,KAAMD,EAAoBrC,EAApBqC,SAAUQ,EAAU7C,EAAV6C,MAExB,OACE,kBAACV,EAAD,KACE,kBAACC,EAAD,CAA0BC,SAAUA,IACpC,kBAACE,EAAD,KACE,kBAACC,EAAD,KAAqBF,GACrB,kBAACI,EAAD,SAAuBG,IAEzB,kBAACZ,EAAD,CAAWxC,QAAS,kBAAMmD,EAAQ5C,KAAlC","file":"static/js/5.f394a3af.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const CollectionPreviewContainer = styled.div`\n  display : flex ;\n  flex-direction: column;\n  align-items: center;\n`\n\nexport const Title = styled.h2`\n  font-size : 1.7em;     \n  margin :2rem 0 .5rem 0 ;\n  cursor: pointer; \n  color : #424242 ; \n  &:hover{\n    color : black;\n  }\n`\n\nexport const Items = styled.div`\n  display : grid ;\n  grid-template-columns: 1fr 1fr 1fr 1fr;    \n  grid-gap : .5rem ;\n  @media screen and (max-width : 800px){    \n    grid-template-columns: 1fr 1fr; \n    width : 100%; \n  }\n  @media screen and (max-width : 500px){    \n    grid-template-columns: 1fr; \n    width : 100%; \n  }\n`","import React from \"react\";\nimport CollectionItem from \"../collection-item/collection-item.component\";\nimport {\n  CollectionPreviewContainer,\n  Title,\n  Items,\n} from \"./collections-preview.styles\";\nimport { withRouter } from \"react-router-dom\";\nconst CollectionsPreview = ({\n  title,\n  id,\n  routeName,\n  items,\n  history,\n  match,\n}) => {\n  return (\n    <CollectionPreviewContainer>\n      <Title onClick={() => history.push(`${match.path}/${routeName}`)}>\n        {title}\n      </Title>\n      <Items>\n        {items\n          .filter((_, idx) => idx < 4)\n          .map((item) => (\n            <CollectionItem key={item.id} item={item} />\n          ))}\n      </Items>\n    </CollectionPreviewContainer>\n  );\n};\n\nexport default withRouter(CollectionsPreview);\n","import styled from \"styled-components\";\n\nexport const CollectionOverviewContainer = styled.div`\n  z-index: 0;\n  width : 100%;\n  \n`","import React from \"react\";\nimport CollectionsPreview from \"../collections-preview/collections-preview.component\";\nimport { CollectionOverviewContainer } from \"./collections-overview.styles\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCollectionsOverview } from \"../../redux/shop/shop.selectors\";\nconst CollectionsOverview = ({ collections }) => {\n  console.log(collections);\n  return (\n    <CollectionOverviewContainer>\n      {collections.map((item) => (\n        <CollectionsPreview key={item.id} {...item} />\n      ))}\n    </CollectionOverviewContainer>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectCollectionsOverview,\n});\nexport default connect(mapStateToProps)(CollectionsOverview);\n","import {connect} from \"react-redux\"  ;\nimport CollectionsOverview from \"./collections-overview.component\"\nimport {createStructuredSelector} from \"reselect\";\nimport {selectCollectionsIsLoading} from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../../hoc/with-spinner/with-spinner.hoc\";\nconst mapStateToProps = createStructuredSelector({\n  isLoading : selectCollectionsIsLoading\n})\n\nconst CollectionsOverviewContainer = connect(mapStateToProps)(WithSpinner(CollectionsOverview));\n\nexport default CollectionsOverviewContainer;","import styled from \"styled-components\"\nexport const SpinnerOverlay = styled.div`\n  height: 60vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SpinnerContainer = styled.div`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 3px solid rgba(195, 195, 195, 0.6);\n  border-radius: 50%;\n  border-top-color: #636767;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;","import React from \"react\";\nimport { SpinnerOverlay, SpinnerContainer } from \"./with-spinner.styles\";\nconst WithSpinner = (WrappedComponent) => {\n  return ({isLoading, ...otherProps}) => {\n    return isLoading ? (<SpinnerOverlay><SpinnerContainer/></SpinnerOverlay>) : <WrappedComponent {...otherProps}/>\n  }\n};\nexport default WithSpinner;\n","import { createSelector } from \"reselect\";\n\nexport const selectShop = (state) => state.shop;\n\nexport const selectShopCollections = createSelector(\n  selectShop,\n  (shop) => shop.collections\n);\n\nexport const selectCollectionsIsLoading = createSelector(\n  selectShop,\n  (shop) => shop.loading\n);\n\nexport const selectCollection = (collectionUrlParam) =>\n  createSelector(\n    selectShopCollections,\n    (collections) => collections[collectionUrlParam]\n  );\n\nexport const selectCollectionsOverview = createSelector(\n  selectShopCollections,\n  (collections) => Object.keys(collections).map((objKey) => collections[objKey])\n);\n\nexport const isCollectionPageLoaded = createSelector(\n  selectShopCollections,\n  (collections) =>\n    collections ? Object.entries(collections).length > 0 : false\n);\n","import styled from \"styled-components\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nexport const AddButton = styled(CustomButton)` \n  font-size : 1em;\n  position : absolute;\n  width : 60%;\n  top : 70%;\n  left:  50%;\n  transform : translate(-50%,-50%); \n  opacity : .7 ; \n  &:hover{\n    opacity : .9;\n  }\n  &:active{\n    background-color : #ddd;\n  }\n`\nexport const CollectionItemContainer = styled.div`\n  width : 22.5vw; \n  height : 380px; \n  display : flex ; \n  flex-direction: column; \n  align-items : space-between ;\n  position : relative ; \n  border: 1px solid #ccc;\n  border-radius : 5px ;\n  box-shadow : 0 2px 5px rgba(0,0,0,.2);\n  margin : 2rem auto; \n  ${AddButton}{\n    display : none ;\n  }\n  &:hover{\n    ${AddButton}{\n      display: block;\n    }\n  }\n  \n  @media screen and (max-width: 800px){\n    width : 45vw;\n  }\n  @media screen and (max-width : 500px){\n    width : 100%;\n    margin : 1rem auto;\n  }\n`\n\nexport const BackgroundImageContainer = styled.div`\n  width : 100%; \n  height : 100%; \n  background-image : ${({imageUrl}) => `url(${imageUrl})`} ; \n  background-position : center; \n  background-size : cover ; \n`\nBackgroundImageContainer.name = BackgroundImageContainer;\n\nexport const CollectionItemContent = styled.div`    \n  width : 100%;\n  padding : 1rem;\n  display : flex ;\n`\n\nexport const CollectionItemName = styled.span`\n  width : 85%;\n  font-size : 1em ; \n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis; \n`\nexport const CollectionItemPrice = styled.span`\n  width : 15%;\n  font-size : 1em ; \n  font-weight : bolder;  \n`\n\n","import React from \"react\";\nimport {\n  CollectionItemContainer,\n  BackgroundImageContainer,\n  CollectionItemContent,\n  CollectionItemName,\n  CollectionItemPrice,\n  AddButton,\n} from \"./collection-item.styles\";\nimport { connect } from \"react-redux\";\nimport { addItem } from \"../../redux/cart/cart.actions\";\nconst CollectionItem = ({ addItem, item }) => {\n  const { name, imageUrl, price } = item;\n\n  return (\n    <CollectionItemContainer>\n      <BackgroundImageContainer imageUrl={imageUrl}></BackgroundImageContainer>\n      <CollectionItemContent>\n        <CollectionItemName>{name}</CollectionItemName>\n        <CollectionItemPrice>${price}</CollectionItemPrice>\n      </CollectionItemContent>\n      <AddButton onClick={() => addItem(item)}>Add to cart</AddButton>\n    </CollectionItemContainer>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addItem: (item) => dispatch(addItem(item)),\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);\n"],"sourceRoot":""}