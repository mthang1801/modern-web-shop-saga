{"version":3,"sources":["redux/ordered/ordered.actions.js","pages/ordered/ordered.styles.jsx","redux/ordered/ordered.selector.js","components/ordered-list-overview/ordered-list-overview.styles.jsx","components/ordered-list-preview/ordered-list-preview.styles.jsx","components/ordered-item/ordered-item.styles.jsx","components/ordered-item/ordered-item.component.js","components/ordered-list-preview/ordered-list-preview.component.js","components/ordered-list-overview/ordered-list-overview.component.js","components/ordered-list-overview/ordered-list.container.jsx","pages/ordered/ordered.component.js","hoc/with-spinner/with-spinner.styles.jsx","hoc/with-spinner/with-spinner.hoc.jsx"],"names":["fetchOrderedListSuccess","orderedList","type","orderedActionTypes","FETCH_ORDERED_LIST_SUCCESS","payload","fetchOrderedListFail","error","FETCH_ORDERED_LIST_FAIL","message","OrderedListContainer","styled","div","selectOrdered","state","ordered","selectOrderedList","createSelector","selectOrderedLoading","loading","OrderedListOverviewContainer","Title","h2","OrderedEmpty","h3","OrderedListPreviewContainer","MainContents","LeftMainContent","RightMainContent","MoreOrderedDetails","span","OrderedItemDetails","OrderItemContainer","ItemName","ItemPrice","OrderedItem","name","price","quantity","show","timeout","console","log","CSSTransition","in","unmountOnExit","classNames","OrderedListPreview","cartItems","createdAt","user","totalPrice","useState","setShow","Date","seconds","toLocaleDateString","onClick","style","fontWeight","map","item","id","key","mapStateToProps","createStructuredSelector","connect","length","orderedItem","isLoading","WithSpinner","OrderedListOverview","currentUser","selectCurrentUser","dispatch","fetchOrderedList","a","FETCH_ORDERED_LIST_START","auth","onAuthStateChanged","userAuth","firestore","collection","where","uid","get","orderedListToMap","docs","data","match","useEffect","to","pathname","from","path","SpinnerOverlay","SpinnerContainer","WrappedComponent","otherProps"],"mappings":"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","file":"static/js/7.1a6e2ad8.chunk.js","sourcesContent":["import orderedActionTypes from \"./ordered.styles\";\nimport { firestore, auth } from \"../../utils/firebase\";\nconst fetchOrderedListStart = () => ({\n  type: orderedActionTypes.FETCH_ORDERED_LIST_START,\n});\n\nconst fetchOrderedListSuccess = (orderedList) => ({\n  type: orderedActionTypes.FETCH_ORDERED_LIST_SUCCESS,\n  payload: orderedList,\n});\n\nconst fetchOrderedListFail = (error) => ({\n  type: orderedActionTypes.FETCH_ORDERED_LIST_FAIL,\n  payload: error.message,\n});\n\nexport const fetchOrderedList = () => async (dispatch) => {\n  try {\n    dispatch(fetchOrderedListStart());\n    auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const orderedList = await firestore\n          .collection(\"ordered\")\n          .where(\"userId\", \"==\", userAuth.uid)\n          .get();\n        const orderedListToMap = orderedList.docs.map((ordered) => {\n          return { id: ordered.id, ...ordered.data() };\n        });\n        dispatch(fetchOrderedListSuccess(orderedListToMap));\n      }\n    });\n  } catch (error) {\n    dispatch(fetchOrderedListFail(error.message));\n  }\n};\n","import styled from \"styled-components\";\n\nexport const OrderedListContainer = styled.div`\n  width : 85%;\n  margin : auto ;   \n`","import { createSelector } from \"reselect\";\n\nconst selectOrdered = (state) => state.ordered;\n\nexport const selectOrderedList = createSelector(\n  selectOrdered,\n  (ordered) => ordered.orderedList\n);\n\nexport const selectOrderedLoading = createSelector(\n  selectOrdered,\n  (ordered) => ordered.loading\n);\n","import styled from \"styled-components\";\n\nexport const OrderedListOverviewContainer = styled.div`\n  width : 100%;\n  display : flex ; \n  flex-direction : column;\n`\n\nexport const Title = styled.h2`\n  font-size : 2em;\n  margin : 1rem auto 2rem auto;\n`\n\nexport const OrderedEmpty = styled.h3`\n  font-size : 1.3em;  \n  margin : auto;\n`","import styled  from \"styled-components\";\n\nexport const OrderedListPreviewContainer = styled.div`\n  width : 100%; \n  border : 1px solid #ccc ; \n  padding : 1rem 2rem;\n  border-radius : 10px ; \n  margin-bottom : 2rem;\n`\n\nexport const MainContents = styled.div`\n  display : flex ; \n  justify-content : space-between ;\n  font-size : 1em;\n  font-weight : bold ;\n  margin-bottom : .5rem;\n`\n\nexport const LeftMainContent = styled.div`\n  flex  : 1 ;\n`\n\nexport const RightMainContent = styled.div`\n\n`\n\nexport const MoreOrderedDetails = styled.span`\n  color : #1a237e;\n  display : flex ; \n  align-items : center;  \n  font-size : .95em; \n  cursor : pointer  ;\n  &:hover { \n    color : #3949ab;\n  }\n`\nexport const OrderedItemDetails = styled.div`\n  display : flex  ;\n  flex-direction: column;    \n  display : block;\n`","import styled from \"styled-components\";\n\nexport const OrderItemContainer = styled.div`\n  width : 90%; \n  max-width : 500px;\n  display : flex ;\n`\n\n\n\nexport const ItemName = styled.div`\n  flex : 1 ;\n`\n\nexport const ItemPrice = styled.div``","import React from \"react\";\nimport { OrderItemContainer, ItemName, ItemPrice } from \"./ordered-item.styles\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./ordered-item.css\";\nconst OrderedItem = ({ name, price, quantity, show, timeout }) => {\n  console.log(show, timeout);\n  return (\n    <CSSTransition in={show} timeout={timeout} unmountOnExit classNames=\"alert\">\n      <OrderItemContainer>\n        <ItemName>{name}</ItemName>\n        <ItemPrice>${price * quantity}</ItemPrice>\n      </OrderItemContainer>\n    </CSSTransition>\n  );\n};\n\nexport default OrderedItem;\n","import React, { useState } from \"react\";\nimport { FaLongArrowAltDown } from \"react-icons/fa\";\nimport {\n  OrderedListPreviewContainer,\n  MainContents,\n  LeftMainContent,\n  RightMainContent,\n  MoreOrderedDetails,\n  OrderedItemDetails,\n} from \"./ordered-list-preview.styles\";\nimport OrderedItem from \"../ordered-item/ordered-item.component\";\nconst OrderedListPreview = ({ cartItems, user, createdAt, totalPrice }) => {\n  console.log(cartItems);\n  const [show, setShow] = useState(false);\n\n  return (\n    <OrderedListPreviewContainer>\n      <MainContents>\n        <LeftMainContent>\n          {new Date(createdAt.seconds * 1000).toLocaleDateString()}\n        </LeftMainContent>\n        <RightMainContent>${totalPrice}</RightMainContent>\n      </MainContents>\n      <MoreOrderedDetails onClick={() => setShow(!show)}>\n        Ordered Items Detail{\" \"}\n        <FaLongArrowAltDown style={{ fontWeight: \"bold\" }} />\n      </MoreOrderedDetails>\n\n      <OrderedItemDetails show={show}>\n        {cartItems.map((item, id) => (\n          <OrderedItem key={item.id} {...item} timeout={250} show={show} />\n        ))}\n      </OrderedItemDetails>\n    </OrderedListPreviewContainer>\n  );\n};\n\nexport default OrderedListPreview;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectOrderedList } from \"../../redux/ordered/ordered.selector\";\nimport { createStructuredSelector } from \"reselect\";\nimport {\n  OrderedListOverviewContainer,\n  Title,\n  OrderedEmpty,\n} from \"./ordered-list-overview.styles\";\nimport OrderedListPreview from \"../ordered-list-preview/ordered-list-preview.component\";\nconst OrderedListOverview = ({ orderedList }) => {\n  console.log(orderedList);\n  return (\n    <OrderedListOverviewContainer>\n      <Title>History of Orders</Title>\n      {orderedList.length ? (\n        orderedList.map((orderedItem) => (\n          <OrderedListPreview key={orderedItem.id} {...orderedItem} />\n        ))\n      ) : (\n        <OrderedEmpty>No History of Orders</OrderedEmpty>\n      )}\n    </OrderedListOverviewContainer>\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  orderedList: selectOrderedList,\n});\nexport default connect(mapStateToProps)(OrderedListOverview);\n","import {connect} from \"react-redux\";\nimport {selectOrderedLoading} from \"../../redux/ordered/ordered.selector\";\nimport OrderedListOverview from \"./ordered-list-overview.component\";\nimport {createStructuredSelector} from \"reselect\";\nimport WithSpinner from \"../../hoc/with-spinner/with-spinner.hoc\";\nconst mapStateToProps = createStructuredSelector({\n  isLoading : selectOrderedLoading\n})\n\nconst OrderedListOverviewContainer = connect(mapStateToProps)(WithSpinner(OrderedListOverview));\n\nexport default OrderedListOverviewContainer;","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchOrderedList } from \"../../redux/ordered/ordered.actions\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { OrderedListContainer } from \"./ordered.styles\";\nimport { default as OrderedListOverview } from \"../../components/ordered-list-overview/ordered-list.container\";\nimport { Redirect } from \"react-router-dom\";\nconst Ordered = ({ fetchOrderedList, currentUser, match }) => {\n  useEffect(() => {\n    fetchOrderedList();\n  }, [fetchOrderedList]);\n  if (!currentUser)\n    return (\n      <Redirect to={{ pathname: \"auth/signin\", state: { from: match.path } }} />\n    );\n  return (\n    <OrderedListContainer>\n      <OrderedListOverview />\n    </OrderedListContainer>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  fetchOrderedList: () => dispatch(fetchOrderedList()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Ordered);\n","import styled from \"styled-components\"\nexport const SpinnerOverlay = styled.div`\n  height: 60vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SpinnerContainer = styled.div`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 3px solid rgba(195, 195, 195, 0.6);\n  border-radius: 50%;\n  border-top-color: #636767;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;","import React from \"react\";\nimport { SpinnerOverlay, SpinnerContainer } from \"./with-spinner.styles\";\nconst WithSpinner = (WrappedComponent) => {\n  return ({isLoading, ...otherProps}) => {\n    return isLoading ? (<SpinnerOverlay><SpinnerContainer/></SpinnerOverlay>) : <WrappedComponent {...otherProps}/>\n  }\n};\nexport default WithSpinner;\n"],"sourceRoot":""}