{"version":3,"sources":["components/checkout/checkout.styles.jsx","components/checkout-item/checkout-item.styles.jsx","components/checkout-item/checkout-item.component.js","components/checkout/checkout.component.js","components/stripe-button/stripe-button.component.js","pages/checkout/Checkout.styles.jsx","pages/checkout/checkout.component.js"],"names":["CheckoutTable","styled","div","CheckoutHeader","CheckoutBody","CheckoutFooter","footer","ProductBlock","DescriptionBlock","QuantityBlock","PriceBlock","TotalPriceBlock","RemoveBlock","TotalPrice","CheckoutItemContainer","BackgroundImageContainer","BackgroundImage","img","ItemName","ItemQuantity","DecreaseItem","span","IncreaseItem","ItemPrice","ItemTotalPrice","RemoveItem","connect","dispatch","increaseItem","id","decreaseItem","removeItem","item","imageUrl","name","price","quantity","src","alt","onClick","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","totalPrice","selectTotalPrice","length","map","key","to","currentUser","selectCurrentUser","clearCartItems","priceForStripe","onToken","token","a","axios","method","url","data","amount","addCartItemsToOrderedList","alert","console","log","description","image","panelLabel","currency","stripeKey","shippingAddress","billingAddress","zipCode","CheckoutContainer","CheckoutPay","loading","selectIsLoadingUser","match","pathname","state","from","path"],"mappings":"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","file":"static/js/11.81df7248.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const CheckoutTable = styled.div`\n  display : flex ; \n  flex-direction : column;\n  width : 100% ;   \n  margin : auto;\n  height : 70vh;\n`\n\nexport const CheckoutHeader = styled.div`\n  display : flex ;  \n  font-weight : bold;  \n  border-bottom : 1px solid #ccc;\n  padding-bottom : .5rem;\n`\n\nexport const CheckoutBody = styled.div`\n  border-bottom : 1px solid #ccc;\n  height : 80%;\n  overflow-x :hidden ; \n  overflow-y : auto;\n`\n\nexport const CheckoutFooter = styled.footer`\n  margin : 1rem 0;    \n  display : flex ; \n`\n\n\nexport  const ProductBlock = styled.div`\n  flex : 2 ;\n  @media screen and (max-width : 800px){\n    display : none ;\n  }\n`\n\nexport  const DescriptionBlock = styled.div`\n  flex : 3 ;\n`\n\nexport  const QuantityBlock = styled.div`\n  flex : 2 ;\n`\n\nexport  const PriceBlock = styled.div`\n  flex : 2 ;\n`\n\nexport  const TotalPriceBlock = styled.div`\n  flex : 2 ;\n`\n\nexport  const RemoveBlock = styled.div`\n  flex : 1 ;\n`\n\nexport const TotalPrice = styled.div`\n  margin-right : 1rem;\n  font-size : 1.2em;\n  font-weight: bold ; \n  flex : 2;\n`","import styled from \"styled-components\";\n\nexport const CheckoutItemContainer = styled.div`\n  display : flex ; \n  align-items : center;\n  margin : 1.5rem 0 ;  \n  padding-bottom : .5rem;\n`\n\nexport const BackgroundImageContainer = styled.div`   \n  flex : 2;\n  @media screen and (max-width : 800px){\n    display : none ;\n  }\n`\n\nexport const BackgroundImage = styled.img`\n  width : 6.5rem; \n  height: 6.5rem;\n`\n\nexport const ItemName = styled.div`\n  font-weight : bold ; \n  font-size : 1.1em;  \n  flex : 3 ; \n`\n\nexport const ItemQuantity = styled.div`\n  flex : 2;\n  display : flex ; \n  font-size : 1em;\n  \n`\nexport const DecreaseItem = styled.span`\n  color : #606060; \n  cursor: pointer;  \n  &:hover{\n    color : black;\n  }\n  font-size : .9em;\n`\nexport const IncreaseItem = styled.span`\n  color : #606060; \n  cursor: pointer;  \n  &:hover{\n    color : black;\n  }\n  font-size : .9em;\n`\n\n\nexport const ItemPrice = styled.div`\n  flex : 2;\n`\n\nexport const ItemTotalPrice = styled.div`\n  flex : 2;\n`\n\nexport const RemoveItem = styled.span`  \n  flex : 1;\n  color : #9e9e9e;  \n  cursor : pointer ; \n  &:hover{\n    color : black;\n  }  \n`","import React from \"react\";\nimport {\n  BackgroundImage,\n  BackgroundImageContainer,\n  CheckoutItemContainer,\n  ItemName,\n  ItemPrice,\n  ItemQuantity,\n  ItemTotalPrice,\n  RemoveItem,\n  IncreaseItem,\n  DecreaseItem,\n} from \"./checkout-item.styles\";\nimport { connect } from \"react-redux\";\nimport {\n  increaseItem,\n  decreaseItem,\n  removeItem,\n} from \"../../redux/cart/cart.actions\";\nconst CheckoutItem = ({\n  item: { id, imageUrl, name, price, quantity },\n  increaseItem,\n  decreaseItem,\n  removeItem,\n}) => {\n  return (\n    <CheckoutItemContainer>\n      <BackgroundImageContainer>\n        <BackgroundImage src={imageUrl} alt={imageUrl} />\n      </BackgroundImageContainer>\n      <ItemName>{name}</ItemName>\n      <ItemQuantity>\n        <DecreaseItem onClick={() => decreaseItem(id)}>&#10094;</DecreaseItem>\n        {quantity}\n        <IncreaseItem onClick={() => increaseItem(id)}>&#10095;</IncreaseItem>\n      </ItemQuantity>\n      <ItemPrice>${price}</ItemPrice>\n      <ItemTotalPrice>${price * quantity}</ItemTotalPrice>\n      <RemoveItem onClick={() => removeItem(id)}>&#10008;</RemoveItem>\n    </CheckoutItemContainer>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  increaseItem: (id) => dispatch(increaseItem(id)),\n  decreaseItem: (id) => dispatch(decreaseItem(id)),\n  removeItem: (id) => dispatch(removeItem(id)),\n});\n\nexport default connect(null, mapDispatchToProps)(CheckoutItem);\n","import React from \"react\";\nimport {\n  CheckoutTable,\n  CheckoutHeader,\n  ProductBlock,\n  QuantityBlock,\n  PriceBlock,\n  DescriptionBlock,\n  TotalPriceBlock,\n  RemoveBlock,\n  CheckoutBody,\n  CheckoutFooter,\n  TotalPrice,\n} from \"./checkout.styles\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CheckoutItem from \"../checkout-item/checkout-item.component\";\nimport {\n  selectTotalPrice,\n  selectCartItems,\n} from \"../../redux/cart/cart.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nconst Checkout = ({ cartItems, totalPrice }) => {\n  if (!cartItems.length) return <Redirect to=\"/\" />;\n  return (\n    <CheckoutTable>\n      <CheckoutHeader>\n        <ProductBlock>Product</ProductBlock>\n        <DescriptionBlock>Description</DescriptionBlock>\n        <QuantityBlock>Quantity</QuantityBlock>\n        <PriceBlock>Price</PriceBlock>\n        <TotalPriceBlock>Total Price</TotalPriceBlock>\n        <RemoveBlock>Remove</RemoveBlock>\n      </CheckoutHeader>\n      <CheckoutBody>\n        {cartItems.map((item) => (\n          <CheckoutItem key={item.id} item={item} />\n        ))}\n      </CheckoutBody>\n      <CheckoutFooter>\n        <ProductBlock />\n        <DescriptionBlock />\n        <QuantityBlock />\n        <PriceBlock>Total Price: </PriceBlock>\n        <TotalPrice>${totalPrice}</TotalPrice>\n        <RemoveBlock />\n      </CheckoutFooter>\n    </CheckoutTable>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  totalPrice: selectTotalPrice,\n});\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\nimport { clearCartItems } from \"../../redux/cart/cart.actions\";\nimport { connect } from \"react-redux\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { addCartItemsToOrderedList } from \"../../utils/firebase\";\nconst StripeButton = ({ price, clearCartItems, currentUser, cartItems }) => {\n  const publish_key =\n    \"pk_test_51H2ox9KqyLpFyVsNQPr7V1eFkeRTtEtdG7vgXAlM4E3UiDJ9U8MXv5RtLoo2qLMW6qckNvDbwf5PcZXmNfbAJhQd00zyZ5D9ir\";\n  const priceForStripe = price * 1000; //based on cents\n  const onToken = async (token) => {\n    try {\n      await axios({\n        method: \"POST\",\n        url: \"payment\",\n        data: {\n          token,\n          amount: priceForStripe,\n        },\n      });\n\n      await addCartItemsToOrderedList(cartItems, price);\n      clearCartItems();\n      alert(\"Payment success\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <StripeCheckout\n      name=\"Modern Clothes\"\n      description={`Your total payment $${price}`}\n      image=\"https://svgshare.com/i/CUz.svg\"\n      panelLabel=\"Pay Now\"\n      amount={priceForStripe}\n      currency=\"USD\"\n      stripeKey={publish_key}\n      shippingAddress\n      billingAddress\n      zipCode={false}\n      token={onToken}\n    />\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  cartItems: selectCartItems,\n});\nexport default connect(mapStateToProps, { clearCartItems })(StripeButton);\n","import styled from \"styled-components\";\n\nexport const CheckoutContainer = styled.div`\n  display : flex;  \n  flex-direction : column ; \n  width : 90%;\n  margin: auto;\n`\n\nexport const CheckoutPay = styled.div`\n  align-self : flex-end;\n  margin : 2rem 0;\n`","import React from \"react\";\nimport Checkout from \"../../components/checkout/checkout.component\";\nimport { createStructuredSelector } from \"reselect\";\nimport {\n  selectCurrentUser,\n  selectIsLoadingUser,\n} from \"../../redux/user/user.selectors\";\nimport { selectTotalPrice } from \"../../redux/cart/cart.selectors\";\nimport Spinner from \"../../components/spinner/spinner.component\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport StripeButton from \"../../components/stripe-button/stripe-button.component\";\nimport { CheckoutContainer, CheckoutPay } from \"./Checkout.styles\";\nconst CheckoutPage = ({ currentUser, loading, totalPrice, match }) => {\n  console.log(loading);\n  if (loading) return <Spinner />;\n  if (!currentUser && !loading) {\n    return (\n      <Redirect\n        to={{ pathname: \"/auth/signin\", state: { from: `${match.path}` } }}\n      />\n    );\n  }\n  return (\n    <CheckoutContainer>\n      <Checkout />\n      <CheckoutPay>\n        <StripeButton price={totalPrice} />\n      </CheckoutPay>\n    </CheckoutContainer>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  loading: selectIsLoadingUser,\n  totalPrice: selectTotalPrice,\n});\n\nexport default connect(mapStateToProps)(CheckoutPage);\n"],"sourceRoot":""}