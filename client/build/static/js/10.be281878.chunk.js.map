{"version":3,"sources":["components/signin/signin.styles.jsx","components/custom-input/custom-input.style.jsx","components/custom-input/custom-input.component.js","components/signin/signin.component.jsx","components/signup/signup.styles.jsx","components/signup/signup.component.jsx","components/forgot-password/forgot-password.styles.jsx","components/forgot-password/forgot-password.component.jsx","pages/auth/auth.component.js"],"names":["CustomFormContainer","styled","form","FormHeader","div","FormGroups","FormActions","SignInTitle","h2","SignInSubTitle","span","StyledLink","Link","Option","FlashForm","ErrorMessage","InputGroup","Input","input","type","border","Label","label","shrinkLabel","TextSuccess","TextError","CustomInput","onChange","value","touched","validationErrors","valid","otherProps","transformedErrors","length","map","error","idx","SignIn","state","email","password","handleChange","e","target","name","setState","onSubmitSigninForm","a","preventDefault","auth","signInWithEmailAndPassword","message","this","authPath","props","onSubmit","icon","size","color","bgColor","variant","onClick","signInWithGoogle","positionIcon","signInWithFacebook","required","to","React","Component","withRouter","SignUpTitle","SignUpSubTitle","INITIAL_STATE","controls","validation","minLength","maxLength","isEmail","confirmPassword","match","formIsValid","SignUp","checkValidity","rules","console","log","isValid","errorsMessage","trim","push","test","updatedControls","updatedControlElement","checkValid","handleSubmitSignUpForm","signUpAccount","formInputArray","Object","keys","controlItem","key","require","disabled","ForgotPasswordTitle","ForgotPasswordSubTitle","ForgotPassword","AuthPage","location","currentUser","from","path","render","mapStateToProps","createStructuredSelector","selectCurrentUser","connect"],"mappings":"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","file":"static/js/10.be281878.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\nexport const CustomFormContainer = styled.form`\n  width : 500px ;\n  padding : 2.5rem 3.5rem ;\n  text-align : center;  \n  border: 1px solid #ccc;\n  margin : 1rem auto;\n  border-radius : 10px;\n  box-shadow : 0 3px 6px rgba(0,0,0,0.15);\n  display : flex ; \n  flex-direction : column ; \n  align-items : center;  \n  @media screen and (max-width: 500px){\n    width : 90%;\n    padding : 1.5rem 2rem;\n  }\n`\nexport const FormHeader = styled.div`\n  margin-bottom: 2rem;\n`\n\nexport const FormGroups = styled.div`\n  display : flex;\n  width : 100%;\n  flex-direction : column;\n  justify-content : center;\n  align-items : center;\n  margin : 1rem auto ;\n\n`\n\nexport const FormActions = styled.div`\n  display : flex ;\n  flex-direction : column;\n  justify-content :center;\n  align-items: center;  \n`\n\nexport const SignInTitle = styled.h2`\n  text-transform : uppercase ;  \n  font-size : 2em;\n`\n\nexport const SignInSubTitle = styled.span`\n  color : #505050;\n  font-size : .95em;\n`\n\nexport const StyledLink = styled(Link)`\n  color : blue;\n`\n\nexport const Option = styled.span`\n  font-size : .95em;\n`\n\nexport const FlashForm = styled.div`\n  width : 100%;\n  display : flex ; \n  justify-content : space-around;\n  & > * {\n    width : 40%;\n  }\n  @media screen and (max-width : 500px){    \n    flex-direction : column;        \n    &> *{\n      width : 100%;\n      margin-bottom : 1rem;\n    }\n  }\n  \n`\n\nexport const ErrorMessage = styled.div`\n  color : red ; \n  margin-bottom : 1rem;\n`\n","import styled from \"styled-components\";\n\nexport const InputGroup = styled.div`  \n  width : 100%;\n  position : relative;  \n  margin : 1rem auto;    \n  text-align: left ;\n`\n\nexport const Input = styled.input`\n  width : 100%;\n  padding : .7rem; \n  outline : none ;\n  border : none ;  \n  color : black ;    \n  font-size : 1.1em;  \n  border : 2px solid #0d47a1  ;\n  border-radius : 6px;      \n  letter-spacing : ${({type}) => type === \"password\" ? \"0.3em\" : \"0.05em\"};\n  border-color: ${({border}) => border === \"error\" ? \"red\" : border=== \"success\" ? \"green\" : \"#0d47a1\"};\n  background-color : #e3f2fd;\n`\n\n\nexport const Label = styled.label`  \n  position : absolute ;\n  font-size :${({shrinkLabel}) => shrinkLabel ? \"0.8em\" : \"0.9em\"};\n  color : #404040;\n  left : ${({shrinkLabel}) => shrinkLabel ? \"7px\" : \"15px\"};\n  top : ${({shrinkLabel}) => shrinkLabel ? \"-13px\" : \"15px\"};\n  padding : 0 8px;\n  transition : all .25s ease-out ;  \n  background-color : ${({shrinkLabel}) => shrinkLabel ? \"white\" : \"transparent\"};\n  ${Input}:focus ~ &{\n    left: 7px ;\n    top : -13px ; \n    font-size : 0.8em;\n    background-color : white;\n  } \n`\n\nexport const TextSuccess = styled.span`\n  color : green ; \n  font-size : .9em;\n`\n\nexport const TextError  = styled.span`\n  color : red ; \n  font-size : .9em;\n`","import React from \"react\";\nimport {\n  InputGroup,\n  Input,\n  Label,\n  TextError,\n  TextSuccess,\n} from \"./custom-input.style\";\nconst CustomInput = ({\n  onChange,\n  label,\n  value,\n  touched,\n  valid,\n  validationErrors,\n  ...otherProps\n}) => {\n  const transformedErrors =\n    validationErrors && validationErrors.length\n      ? validationErrors.map((error, idx) => {\n          return idx === validationErrors.length - 1 ? error : error + \", \";\n        })\n      : \"\";\n  const border = touched ? (transformedErrors ? \"error\" : \"success\") : null;\n  return (\n    <InputGroup>\n      <Input\n        onChange={onChange}\n        value={value}\n        {...otherProps}\n        border={border}\n      />\n      <Label shrinkLabel={!!value}>{label}</Label>\n      {touched ? (\n        transformedErrors ? (\n          <TextError>{transformedErrors}</TextError>\n        ) : (\n          <TextSuccess>Valid Field</TextSuccess>\n        )\n      ) : null}\n    </InputGroup>\n  );\n};\n\nexport default CustomInput;\n","import React  from \"react\"; \nimport {CustomFormContainer, FormHeader, SignInTitle, SignInSubTitle,  FormGroups, FormActions, StyledLink, Option, FlashForm , ErrorMessage} from \"./signin.styles\";\nimport CustomInput from \"../custom-input/custom-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport {withRouter} from \"react-router-dom\";\nimport {FaGooglePlusG, FaFacebookF} from \"react-icons/fa\"\nimport {signInWithGoogle, auth, signInWithFacebook} from \"../../utils/firebase\";\nclass SignIn extends React.Component{\n  state = {\n    email : \"\", \n    password : \"\",\n    error : null\n  }\n\n  handleChange = e => {\n    const {name, value} = e.target;\n    this.setState({ [name] : value})\n  }\n\n  onSubmitSigninForm = async e => {\n    e.preventDefault();\n    const {email, password} = this.state ; \n    this.setState({error : null })\n    try {\n      await auth.signInWithEmailAndPassword(email, password);      \n    } catch (error) {\n      this.setState({error : error.message})\n    }\n  }\n\n  render(){    \n    const {email, password, error} = this.state;   \n    const {authPath}  = this.props;   \n    return (\n      <CustomFormContainer onSubmit={this.onSubmitSigninForm}>\n        <FormHeader>\n          <SignInTitle>Sign In</SignInTitle>\n          <SignInSubTitle>Sign in your account via email and password.</SignInSubTitle>\n        </FormHeader>\n        {error &&  <ErrorMessage>{error}</ErrorMessage>}\n        <FlashForm>\n          <CustomButton type=\"button\" icon={<FaGooglePlusG/>} size=\"small\"  color=\"white\" bgColor=\"#EA4335\" variant=\"contained\" onClick={signInWithGoogle} positionIcon=\"after\">Sign In</CustomButton>     \n          <CustomButton type=\"button\" icon={<FaFacebookF/>} size=\"small\"  color=\"white\" bgColor=\"#4267B2\" variant=\"contained\" onClick={signInWithFacebook} positionIcon=\"after\">Sign In</CustomButton>     \n        </FlashForm>\n        <FormGroups>                        \n          <CustomInput type=\"text\" name=\"email\" value={email} label=\"Email\" onChange={this.handleChange} required/>\n          <CustomInput type=\"password\" name=\"password\" value={password} label=\"Password\" onChange={this.handleChange} required/>\n          <CustomButton variant=\"outlined\" size=\"small\" color=\"#0d47a1\" bgColor=\"blue\">Sign In</CustomButton>\n        </FormGroups>       \n        <FormActions>          \n          <Option>Don't have account ? <StyledLink to={`${authPath}/signup`}>Signup account</StyledLink></Option>\n          <Option>Forgot password ? <StyledLink to={`${authPath}/forgot-password`}>Get Password Again.</StyledLink></Option>\n        </FormActions>\n      </CustomFormContainer>\n    )\n  }\n\n}\n\nexport default withRouter(SignIn);","import styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\nexport const CustomFormContainer = styled.form`\n  width : 500px ;\n  padding : 3rem 4rem ;\n  text-align : center;  \n  border: 1px solid #ccc;\n  margin : 2rem auto;\n  border-radius : 10px;\n  box-shadow : 0 3px 6px rgba(0,0,0,0.15);\n  @media screen and (max-width: 500px){\n    width : 90%;\n    padding : 1.5rem 2rem;\n  }\n`\nexport const FormHeader = styled.div`\n  margin-bottom: 2rem;\n`\n\nexport const FormGroups = styled.div`\n  display : flex;\n  width : 100%;\n  flex-direction : column;\n  justify-content : center;\n  align-items : center;\n  margin : 1rem auto ;\n\n`\n\nexport const FormActions = styled.div`\n  display : flex ;\n  flex-direction : column;\n  justify-content :center;\n  align-items: center;  \n`\n\nexport const SignUpTitle = styled.h2`\n  text-transform : uppercase ;  \n  font-size : 2em;\n`\n\nexport const SignUpSubTitle = styled.span`\n  color : #505050;\n  font-size : .95em;\n`\n\nexport const StyledLink = styled(Link)`\n  color : blue;\n`\n\nexport const Option = styled.span`\n  font-size : .95em;\n`\n\nexport const FlashForm = styled.div`\n  width : 100%;\n  display : flex ; \n  justify-content : space-around;\n  & > * {\n    width : 40%;\n  }\n  @media screen and (max-width : 500px){    \n    flex-direction : column;        \n    &> *{\n      width : 100%;\n      margin-bottom : 1rem;\n    }\n  }\n`","import React  from \"react\"; \nimport {CustomFormContainer, FormHeader, SignUpTitle, SignUpSubTitle,  FormGroups, FormActions, StyledLink, Option, FlashForm} from \"./signup.styles\";\nimport CustomInput from \"../custom-input/custom-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport {withRouter} from \"react-router-dom\";\nimport {FaGooglePlusG, FaFacebookF} from \"react-icons/fa\";\nimport {signInWithGoogle, signInWithFacebook, signUpAccount } from \"../../utils/firebase\";\nconst INITIAL_STATE = {       \n  controls : {\n    name : {\n      type : \"text\", \n      name : \"name\",\n      valid : false , \n      label : \"Name\",\n      validation : {\n        required : true, \n        minLength : 3, \n        maxLength : 50\n      },\n      value : \"\",\n      touched : false ,\n      validationErrors : \"\"\n    },\n    email : {\n      type : \"email\", \n      name : \"email\",\n      label : \"Email\", \n      valid : false , \n      validation : {\n        required : true, \n        isEmail : true \n      },\n      value : \"\",\n      touched : false ,\n      validationErrors : \"\"\n    },\n    password : {\n      type : \"password\", \n      name : \"password\",\n      valid : false , \n      label : \"Password\",\n      validation : {\n        required : true, \n        minLength : 6,\n      },\n      value : \"\",\n      touched : false ,\n      validationErrors : \"\"\n    },\n    confirmPassword : {\n      type : \"password\", \n      name : \"confirmPassword\",\n      label : \"Confirm Password\",\n      valid : false , \n      validation : {\n        required : true, \n        minLength : 6,\n        match : true \n      },\n      value : \"\",\n      touched : false ,\n      validationErrors : \"\"\n    },\n  },\n  formIsValid : false \n}\nclass SignUp extends React.Component{\n  state = {...INITIAL_STATE}\n  \n  checkValidity = (value, rules) => {\n    console.log(rules);\n    let isValid = true ; \n    let errorsMessage = []; \n    if(rules.required){\n      isValid = value.trim().length && isValid ; \n      if(!isValid){\n        errorsMessage.push(\"This field is required\");\n      }\n    }\n    if(rules.isEmail){\n      const pattern =  /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      isValid = pattern.test(value) && isValid ; \n      if(!isValid){\n        errorsMessage.push(\"Email is invalid\");\n      }\n    }\n    if(rules.minLength){\n      isValid = value.trim().length >= rules.minLength && isValid ;\n      if(!isValid){\n        errorsMessage.push(`Invalid, at least ${rules.minLength} characters`);\n      }\n    }\n    if(rules.maxLength){\n      isValid = value.trim().length <= rules.maxLength && isValid ;\n      if(!isValid){\n        errorsMessage.push(`Invalid, at most ${rules.maxLength} characters`);\n      }\n    }\n    if(rules.match){\n      isValid = value.trim() === this.state.controls.password.value && isValid ; \n      if(!isValid){\n        errorsMessage.push(\"Password and confirm Password do not match\");\n      }\n    }\n    return errorsMessage;   \n  }\n\n  handleChange = (e,name) => {\n    let updatedControls = {...this.state.controls};\n    let updatedControlElement= {...updatedControls[name]};\n    updatedControlElement.value = e.target.value ; \n    const checkValid = this.checkValidity( e.target.value, updatedControlElement.validation) ;\n    updatedControlElement.valid = checkValid.length === 0  ; \n    updatedControlElement.touched = true ; \n    updatedControlElement.validationErrors = checkValid;  \n    updatedControls[name] = updatedControlElement;   \n    let {email, password, confirmPassword} = updatedControls;\n    const formIsValid = email.valid && updatedControlElement.valid && password.valid && confirmPassword.valid ;\n    this.setState({controls : updatedControls, formIsValid})\n  }\n\n  handleSubmitSignUpForm = e => {\n    e.preventDefault();\n    if(!this.state.formIsValid){\n      this.setState({...INITIAL_STATE})\n      return ;\n    }\n    const {name, email, password} = this.state.controls ;        \n    signUpAccount(name.value,email.value,password.value);\n  }\n\n  render(){    \n    const {formIsValid} = this.state; \n    let formInputArray = []  ; \n    Object.keys(this.state.controls).map( controlItem => {\n      formInputArray.push(this.state.controls[controlItem]);\n    })    \n    return (\n      <CustomFormContainer onSubmit={this.handleSubmitSignUpForm}>\n        <FormHeader>\n          <SignUpTitle>Sign Up</SignUpTitle>\n          <SignUpSubTitle>Sign up your account via email and password.</SignUpSubTitle>\n        </FormHeader>\n        <FlashForm>\n          <CustomButton type=\"button\" icon={<FaGooglePlusG/>} size=\"small\"  color=\"white\" bgColor=\"#EA4335\" variant=\"contained\" onClick={signInWithGoogle} positionIcon=\"after\">Sign In</CustomButton>     \n          <CustomButton type=\"button\" icon={<FaFacebookF/>} size=\"small\"  color=\"white\" bgColor=\"#4267B2\" variant=\"contained\" onClick={signInWithFacebook} positionIcon=\"after\">Sign In</CustomButton>     \n        </FlashForm>\n        <FormGroups>         \n          {formInputArray.map(({label, name, touched, type, valid, validation, validationErrors, value}) => (\n            <CustomInput\n              key={name}\n              type={type}\n              name={name}\n              value={value}\n              label={label}\n              onChange={e => this.handleChange(e,name)}\n              require={validation.required}\n              touched={touched}\n              valid={valid}\n              validationErrors={validationErrors}\n            />\n          ))}\n          <CustomButton variant=\"outlined\" size=\"small\" color=\"#0d47a1\" bgColor=\"blue\" disabled={!formIsValid}>Submit</CustomButton>\n        </FormGroups>       \n        <FormActions>          \n          <Option><StyledLink to=\"/auth/signin\">Signin account</StyledLink></Option>\n          <Option>Forgot password ? <StyledLink to=\"/auth/forgot-password\">Get Password Again.</StyledLink></Option>\n        </FormActions>\n      </CustomFormContainer>\n    )\n  }\n\n}\n\nexport default withRouter(SignUp);","import styled from \"styled-components\";\nimport {Link} from \"react-router-dom\";\nexport const CustomFormContainer = styled.form`\n  width : 500px ;\n  padding : 3rem 4rem ;\n  text-align : center;  \n  border: 1px solid #ccc;\n  margin : 2rem auto;\n  border-radius : 10px;\n  box-shadow : 0 3px 6px rgba(0,0,0,0.15);\n  @media screen and (max-width: 500px){\n    width : 90%;\n    padding : 1rem 1.5rem;\n  }\n`\nexport const FormHeader = styled.div`\n  margin-bottom: 2rem;\n`\n\nexport const FormGroups = styled.div`\n  display : flex;\n  width : 100%;\n  flex-direction : column;\n  justify-content : center;\n  align-items : center;\n  margin : 2rem auto ;\n\n`\n\nexport const FormActions = styled.div`\n  display : flex ;\n  flex-direction : column;\n  justify-content :center;\n  align-items: center;  \n`\n\nexport const ForgotPasswordTitle = styled.h2`\n  text-transform : uppercase ;  \n  font-size : 2em;\n`\n\nexport const ForgotPasswordSubTitle = styled.span`\n  color : #505050;\n  font-size : .95em;\n`\n\nexport const StyledLink = styled(Link)`\n  color : blue;\n`\n\nexport const Option = styled.span`\n  font-size : .95em;\n`","import React  from \"react\"; \nimport {CustomFormContainer, FormHeader, ForgotPasswordTitle, ForgotPasswordSubTitle,  FormGroups, FormActions, StyledLink, Option} from \"./forgot-password.styles\";\nimport CustomInput from \"../custom-input/custom-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport {withRouter} from \"react-router-dom\";\nclass ForgotPassword extends React.Component{\n  state = {\n    email : \"\",    \n  }\n\n  handleChange = e => {\n    const {name, value} = e.target;\n    this.setState({ [name] : value})\n  }\n\n  render(){    \n    const {email, password} = this.state;    \n    return (\n      <CustomFormContainer>\n        <FormHeader>\n          <ForgotPasswordTitle>Forgot account</ForgotPasswordTitle>\n          <ForgotPasswordSubTitle>Get your account via Email.</ForgotPasswordSubTitle>\n        </FormHeader>\n        <FormGroups>\n          <CustomInput type=\"text\" name=\"email\" value={email} label=\"Email\" onChange={this.handleChange} required/>        \n          <CustomButton variant=\"outlined\" size=\"small\" color=\"#0d47a1\" bgColor=\"blue\">Submit</CustomButton>\n        </FormGroups>       \n        <FormActions>          \n          <Option><StyledLink to=\"/auth/signin\">Back to Signin</StyledLink></Option>          \n        </FormActions>\n      </CustomFormContainer>\n    )\n  }\n\n}\n\nexport default withRouter(ForgotPassword);","import React from \"react\";\nimport SignIn from \"../../components/signin/signin.component\";\nimport SignUp from \"../../components/signup/signup.component\";\nimport ForgotPassword from \"../../components/forgot-password/forgot-password.component\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { Redirect } from \"react-router-dom\";\nclass AuthPage extends React.Component {\n  render() {\n    const { match, location, currentUser } = this.props;\n    if (currentUser) {\n      if (location.state) return <Redirect to={location.state.from} />;\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <Switch>\n        <Route\n          path={`${match.path}/signin`}\n          render={(props) => <SignIn authPath={match.path} {...props} />}\n        />\n        <Route\n          path={`${match.path}/signup`}\n          render={(props) => <SignUp authPath={match.path} {...props} />}\n        />\n        <Route\n          path={`${match.path}/forgot-password`}\n          render={(props) => (\n            <ForgotPassword authPath={match.path} {...props} />\n          )}\n        />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nexport default connect(mapStateToProps)(AuthPage);\n"],"sourceRoot":""}